version: '2.1'

services:
  api:
    image: balena/jellyfish
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      args:
        - NPM_TOKEN
    networks:
      - internal
    depends_on:
      - postgres
      - redis
      {{#workers}}
      - worker_{{idx}}
      {{/workers}}
      - balena-mdns-publisher
    environment:
      - NODE_ENV
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_ID
      - INTEGRATION_BALENA_API_APP_SECRET
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - REGISTRY_TOKEN_AUTH_CERT_KEY
      - REGISTRY_TOKEN_AUTH_CERT_KID
    healthcheck:
      interval: 30s
      retries: 5
      test:
        - CMD
        - curl
        - --fail
        - http://localhost:80/health
      timeout: 10s
    expose:
      - 80
    ports:
      - 9229
    restart: always
  livechat:
    image: balena/jellyfish-livechat
    build:
      args:
        - NPM_TOKEN
      context: .
      dockerfile: ./apps/livechat/Dockerfile
    depends_on:
      - api
      - balena-mdns-publisher
    networks:
      - internal
    environment:
      - SENTRY_DSN_UI=0
      - NGINX_PORT=80
  postgres:
    image: balena/open-balena-db:4.1.0
    restart: always
    networks:
      - internal
  redis:
    image: balena/balena-redis:0.0.3
    command: [sh, -c, "redis-server /usr/local/etc/redis/redis.conf --save ''"]
    restart: always
    networks:
      - internal
  ui:
    image: balena/jellyfish-ui
    build:
      args:
        - NPM_TOKEN
      context: .
      dockerfile: ./apps/ui/Dockerfile
    depends_on:
      - api
      - balena-mdns-publisher
    environment:
      - SENTRY_DSN_UI=0
      - NGINX_PORT=80
      - NODE_ENV
    networks:
      - internal
  {{#workers}}
  worker_{{idx}}:
    image: balena/jellyfish-action-server
    build:
      context: .
      dockerfile: ./apps/action-server/Dockerfile
      args:
        - NPM_TOKEN
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - NODE_ENV
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_ID
      - INTEGRATION_BALENA_API_APP_SECRET
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
    restart: always
    networks:
      - internal
    ports:
      - 923{{idx}}:9229
  {{/workers}}
  balena-mdns-publisher:
    image: 'balena/balena-mdns-publisher:1.10.1'
    network_mode: host
    cap_add:
      - SYS_RESOURCE
      - SYS_ADMIN
    security_opt:
      - 'apparmor=unconfined'
    tmpfs:
      - /run
      - /sys/fs/cgroup
    labels:
      io.balena.features.dbus: '1'
      io.balena.features.supervisor-api: '1'
    environment:
      MDNS_TLD: ly.fish.local
      MDNS_SUBDOMAINS: >-
        ["jel", "livechat", "api", "registry"]
      DBUS_SESSION_BUS_ADDRESS: 'unix:path=/host/run/dbus/system_bus_socket'
      CONFD_BACKEND: 'ENV'
  haproxy:
    image: 'balena/open-balena-haproxy:2.11.3'
    cap_add:
      - SYS_RESOURCE
      - SYS_ADMIN
    security_opt:
      - 'apparmor=unconfined'
    tmpfs:
      - /run
      - /sys/fs/cgroup
    depends_on:
      {{#workers}}
      - worker_{{idx}}
      {{/workers}}
      - ui
      - livechat
      - api
      - balena-mdns-publisher
    ports:
      - '80:80'
      - '{{POSTGRES_PORT}}:{{POSTGRES_PORT}}'
      - '{{REDIS_PORT}}:{{REDIS_PORT}}'
    networks:
      internal:
        aliases:
          - jel.ly.fish.local
          - livechat.ly.fish.local
          - api.ly.fish.local
          - postgres.ly.fish.local
          - redis.ly.fish.local
    environment:
      DOMAIN_INC_UUID: 'false'
      AUTOGENERATE_CERTS: 'false'
      AUTH_TOKEN: <token>
      STATIC_DNS_IP: <ip>
      CONFD_BACKEND: 'ENV'
      PROXY_CONFIG: {{& HAPROXY_CONFIG}}

networks:
  internal: {}

secrets:
  aws_access_key_id:
    file: ./.balena/secrets/aws_access_key_id.txt
  aws_s3_bucket_name:
    file: ./.balena/secrets/aws_s3_bucket_name.txt
  aws_secret_access_key:
    file: ./.balena/secrets/aws_secret_access_key.txt
  integration_balena_api_app_id:
    file: ./.balena/secrets/integration_balena_api_app_id.txt
  integration_balena_api_app_secret:
    file: ./.balena/secrets/integration_balena_api_app_secret.txt
  integration_balena_api_private_key:
    file: ./.balena/secrets/integration_balena_api_private_key.txt
  integration_balena_api_public_key_production:
    file: ./.balena/secrets/integration_balena_api_public_key_production.txt
  integration_balena_api_public_key_staging:
    file: ./.balena/secrets/integration_balena_api_public_key_staging.txt
  integration_discourse_signature_key:
    file: ./.balena/secrets/integration_discourse_signature_key.txt
  integration_discourse_token:
    file: ./.balena/secrets/integration_discourse_token.txt
  integration_discourse_username:
    file: ./.balena/secrets/integration_discourse_username.txt
  integration_flowdock_signature_key:
    file: ./.balena/secrets/integration_flowdock_signature_key.txt
  integration_flowdock_token:
    file: ./.balena/secrets/integration_flowdock_token.txt
  integration_front_token:
    file: ./.balena/secrets/integration_front_token.txt
  integration_github_app_id:
    file: ./.balena/secrets/integration_github_app_id.txt
  integration_github_private_key:
    file: ./.balena/secrets/integration_github_private_key.txt
  integration_github_signature_key:
    file: ./.balena/secrets/integration_github_signature_key.txt
  integration_github_token:
    file: ./.balena/secrets/integration_github_token.txt
  integration_google_meet_credentials:
    file: ./.balena/secrets/integration_google_meet_credentials.txt
  integration_intercom_token:
    file: ./.balena/secrets/integration_intercom_token.txt
  integration_outreach_app_id:
    file: ./.balena/secrets/integration_outreach_app_id.txt
  integration_outreach_app_secret:
    file: ./.balena/secrets/integration_outreach_app_secret.txt
  integration_outreach_signature_key:
    file: ./.balena/secrets/integration_outreach_signature_key.txt
  integration_typeform_signature_key:
    file: ./.balena/secrets/integration_typeform_signature_key.txt
  mailgun_token:
    file: ./.balena/secrets/mailgun_token.txt
  reset_password_secret_token:
    file: ./.balena/secrets/reset_password_secret_token.txt
  registry_token_auth_cert_key:
    file: ./.balena/secrets/registry_token_auth_cert_key.txt
  registry_token_auth_cert_kid:
    file: ./.balena/secrets/registry_token_auth_cert_kid.txt
