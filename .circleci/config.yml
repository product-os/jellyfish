# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
dependencies:
  pre:
jobs:
  build:
    branches:
      ignore:
        - /(.*)-build-[a-f0-9]{40}$/
        - master
    docker:
      - image: resinci/jellyfish-test

    working_directory: ~/repo

    steps:
      - checkout

      # Restore cached dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      # --unsafe-perm flag allows the postinstall script to run correctly
      - run:
          name: Install Dependencies
          command: npm ci --unsafe-perm && make build

      - run:
          name: Generate Docs
          command: make dist/docs.html

      - save_cache:
          paths:
            - /root/.npm
          key: v2-dependencies-{{ checksum "package.json" }}

      - run:
          name: Start RethinkDB
          command: rethinkdb --daemon --bind all

      # Setup artifact store for UI integration test screenshots
      - run: mkdir -p /tmp/test-results/screenshots

      - run:
          name: Lint
          command: make lint
      - run:
          name: Unit Tests
          command: make test-unit COVERAGE=1
      - run:
          name: Backend Tests Without Cache
          command: make test COVERAGE=0 DISABLE_CACHE=1 FILES=./test/unit/core/backend.spec.js
      - run:
          name: Integration Tests
          command: make test-integration COVERAGE=1
      - run:
          name: Store Code Coverage Results
          command: make report-coverage && cp -rf coverage /tmp/test-results
      - run:
          name: Load Production Database Snapshot
          command: node ./scripts/reset-database.js && ./scripts/import-latest-production-backup.sh
      - run:
          name: Integration Tests (on production database)
          command: make test-integration COVERAGE=0

      # Stress Testing
      - run:
          name: Serial Core Inserts
          command: node stress/core/insert-serial.js
      - run:
          name: Parallel Core Inserts
          command: node stress/core/insert-parallel.js
      - run:
          name: Previous Commit
          command: git checkout HEAD~1 && npm ci
      - run:
          name: Serial Core Inserts (previous)
          command: node stress/core/insert-serial.js
      - run:
          name: Parallel Core Inserts (previous)
          command: node stress/core/insert-parallel.js

      # Store artifacts for debugging purposes
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
