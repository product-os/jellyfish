# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

aliases:
  workflow_filter: &workflow_filter
      filters:
          branches:
            ignore:
              - /(.*)-build-[a-f0-9]{40}$/
              - master

  job_defaults: &job_defaults
      docker:
        - image: resinci/jellyfish-test

      # Match the Dockerfile WORKDIR so we can
      # transparently merge code coverage reports.
      working_directory: /usr/src/jellyfish

      environment: &job_defaults_environment
        DATABASE: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

version: 2
dependencies:
  pre:
jobs:
  build:
    <<: *job_defaults

    steps:
      - checkout

      # Restore cached dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Install Dependencies
          command: npm ci --unsafe-perm

      - save_cache:
          paths:
            - /root/.npm
          key: v2-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: .
          paths:
              - node_modules

  integration_tests: &integration_tests
    <<: *job_defaults

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Start PostgreSQL
          command: service postgresql start && su - postgres -c "psql -U postgres -d postgres -c \"alter user postgres with password 'postgres';\""
      - run:
          name: Start Redis
          command: service redis-server start

      - run:
          name: Integration Tests
          command: make test-integration-core test-integration-queue test-integration-sync test-integration-worker COVERAGE=1 && make test-integration-server COVERAGE=1 INTEGRATION_OUTREACH_APP_ID=$OUTREACH_APP_ID INTEGRATION_OUTREACH_APP_SECRET=$OUTREACH_APP_SECRET INTEGRATION_OUTREACH_SIGNATURE_KEY=$OUTREACH_SIGNATURE_KEY OAUTH_REDIRECT_BASE_URL=https://jel.ly.fish

      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output/*.json

  sync_tests_front_translate:
    <<: *job_defaults

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Start PostgreSQL
          command: service postgresql start && su - postgres -c "psql -U postgres -d postgres -c \"alter user postgres with password 'postgres';\""
      - run:
          name: Start Redis
          command: service redis-server start

      - run:
          name: Sync Tests
          command: make test FILES=./test/integration/sync/front-translate.spec.js COVERAGE=1 INTEGRATION_FRONT_TOKEN=$FRONT_TOKEN INTEGRATION_INTERCOM_TOKEN=$INTERCOM_TOKEN
      - run:
          name: Sync End To End Tests Without Tokens
          command: make test FILES=./test/integration/sync/front-translate.spec.js COVERAGE=1 INTEGRATION_FRONT_TOKEN=

      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output/*.json

  sync_tests_discourse_translate:
    <<: *job_defaults

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Start PostgreSQL
          command: service postgresql start && su - postgres -c "psql -U postgres -d postgres -c \"alter user postgres with password 'postgres';\""
      - run:
          name: Start Redis
          command: service redis-server start

      - run:
          name: Sync Tests
          command: make test FILES=./test/integration/sync/discourse-translate.spec.js COVERAGE=1 INTEGRATION_DISCOURSE_TOKEN=$DISCOURSE_TOKEN INTEGRATION_DISCOURSE_SIGNATURE_KEY=$DISCOURSE_SIGNATURE_KEY INTEGRATION_DISCOURSE_USERNAME=$DISCOURSE_USERNAME
      - run:
          name: Sync End To End Tests Without Tokens
          command: make test FILES=./test/integration/sync/discourse-translate.spec.js COVERAGE=1 INTEGRATION_DISCOURSE_TOKEN=

      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output/*.json

  results:
    <<: *job_defaults

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Git Stats
          command: gitstats -c start_date="1 month ago" . /tmp/test-results/gitstats

      # Store artifacts for debugging purposes
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
    version: 2
    build:
        jobs:
            - build:
                <<: *workflow_filter

            - integration_tests:
                requires:
                    - build
                <<: *workflow_filter

            - sync_tests_front_translate:
                requires:
                    - build
                <<: *workflow_filter

            - sync_tests_discourse_translate:
                requires:
                    - build
                <<: *workflow_filter

            - results:
                requires:
                  - integration_tests
                  - sync_tests_front_translate
                  - sync_tests_discourse_translate
                <<: *workflow_filter
