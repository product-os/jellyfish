version: "3.9"
networks:
  internal: {}
services:
  postgres:
    image: balena/open-balena-db:v5.1.3
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "5432:5432"
    healthcheck:
      interval: 15s
      retries: 3
      test: pg_isready -U docker -d postgres
      timeout: 5s
    command:
      [
        "postgres",
        "-c",
        "fsync=off",
        "-c",
        "synchronous_commit=off",
        "-c",
        "full_page_writes=off",
      ]
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "6379:6379"
    healthcheck:
      interval: 15s
      retries: 3
      test: echo INFO | redis-cli | grep redis_version
      timeout: 5s
    command: redis-server --appendonly yes
  minio-server:
    image: quay.io/minio/minio
    restart: always
    environment:
      MINIO_ROOT_USER: AKIAIOSFODNN7EXAMPLE
      MINIO_ROOT_PASSWORD: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    command: server /data --console-address ":9001"
    ports:
      - "43680:9000"
      - "43697:9001"
  minio-client:
    image: minio/mc
    depends_on:
      - minio-server
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio-server http://minio-server:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
      /usr/bin/mc mb --ignore-existing minio-server/jellyfish;
      exit 0;
      "
