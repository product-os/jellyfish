global
  tune.ssl.default-dh-param 1024

defaults
  timeout connect 5s
  timeout client 180s
  timeout server 180s
  default-server init-addr last,libc,none

resolvers docker-bridge-resolver
  nameserver docker-resolver 127.0.0.11:53
  hold valid 0ms

frontend http_80_in
  mode http
  option forwardfor
  bind *:80
  http-request add-header X-Forwarded-Proto http

acl host_ui_backend hdr_dom(host) -i jel.ly.fish.local livechat.ly.fish.local
use_backend ui_backend if host_ui_backend

acl host_api_backend hdr_dom(host) -i api.ly.fish.local
use_backend api_backend if host_api_backend

acl host_registry_backend hdr_dom(host) -i registry.ly.fish.local
use_backend registry_backend if host_registry_backend

acl host_grafana_backend hdr_dom(host) -i grafana.ly.fish.local
use_backend grafana_backend if host_grafana_backend

acl host_prometheus_backend hdr_dom(host) -i prometheus.ly.fish.local
use_backend prometheus_backend if host_prometheus_backend

frontend tcp_5432_in
    mode tcp
    bind *:5432
    timeout client 0
    default_backend postgres_backend

frontend tcp_6379_in
    mode tcp
    bind *:6379
    timeout client 0
    default_backend redis_backend

frontend tcp_3000_in
    mode tcp
    bind *:3000
    default_backend grafana_backend

frontend tcp_9090_in
    mode tcp
    bind *:9090
    default_backend prometheus_backend

backend ui_backend
    mode http
    option forwardfor
    balance roundrobin
    server ui ui:80 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 80

backend redis_backend
    mode tcp
    timeout server 0
    server redis redis:6379 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 6379

backend postgres_backend
    mode tcp
    timeout server 0
    server postgres postgres:5432 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 5432

backend api_backend
    mode http
    option forwardfor
    balance roundrobin
    server api api:80 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 80

backend registry_backend
    mode http
    option forwardfor
    balance roundrobin
    server registry registry:80 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 80

backend grafana_backend
    mode http
    option forwardfor
    balance roundrobin
    server grafana grafana:3000 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 3000

backend prometheus_backend
    mode http
    option forwardfor
    balance roundrobin
    server prometheus prometheus:9090 resolvers docker-bridge-resolver resolve-prefer ipv4 check port 9090
