version: "3"
services:
  api:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    command: make start-server
    ports:
     - "8000:8000"
    links:
     - database
     - redis
    volumes: [
      ".:/usr/src/app"
    ]
    environment:
     - PORT=8000
     - DATABASE=postgres
     - POSTGRES_DATABASE=resin
     - POSTGRES_USER=docker
     - POSTGRES_PASSWORD=docker
     - POSTGRES_PORT=5432
     - POSTGRES_HOST=database
     - REDIS_HOST=redis
     - REDIS_PASSWORD=12345678
     - NODE_ENV=debug
  tick:
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.tick
    command: make start-tick
    links:
     - database
     - redis
    volumes: [
      ".:/usr/src/app"
    ]
    environment:
     - DATABASE=postgres
     - POSTGRES_DATABASE=resin
     - POSTGRES_USER=docker
     - POSTGRES_PASSWORD=docker
     - POSTGRES_PORT=5432
     - POSTGRES_HOST=database
     - REDIS_HOST=redis
     - REDIS_PASSWORD=12345678
     - NODE_ENV=debug
  worker:
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.worker
    command: make start-worker
    links:
     - database
     - redis
    volumes: [
      ".:/usr/src/app"
    ]
    environment:
     - DATABASE=postgres
     - POSTGRES_DATABASE=resin
     - POSTGRES_USER=docker
     - POSTGRES_PASSWORD=docker
     - POSTGRES_PORT=5432
     - POSTGRES_HOST=database
     - REDIS_HOST=redis
     - REDIS_PASSWORD=12345678
     - NODE_ENV=debug
  ui:
    build:
      context: .
      args:
       - SERVER_HOST=http://localhost
       - SERVER_PORT=8000
       - SENTRY_DSN_UI=0
      dockerfile: apps/ui/Dockerfile
    ports:
     - "9000:80"
    links:
     - api
    environment:
      - NGINX_PORT=80
    volumes: [
      ".:/usr/src/app"
    ]
  database:
    image: balena/open-balena-db
    ports:
     - "5432:5432"
  redis:
    image: balena/balena-redis
    environment:
     - REDIS_PASSWORD=12345678
    ports:
     - "6379:6379"
