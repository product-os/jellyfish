version: '2.1'

services:
  postgres:
    image: balena/open-balena-db:5.0.3
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U docker']
      interval: 5s
      timeout: 5s
      retries: 5
    command: ['postgres', '-c', 'fsync=off', '-c', 'synchronous_commit=off', '-c', 'full_page_writes=off']
    networks:
      - internal
  redis:
    image: balena/balena-redis:v0.0.4
    command: [sh, -c, "redis-server /usr/local/etc/redis/redis.conf --save ''"]
    restart: always
    networks:
      - internal
  ui:
    image: balena/jellyfish-ui
    build:
      context: .
      dockerfile: ./apps/ui/Dockerfile
    depends_on:
      - api
      - balena-mdns-publisher
    environment:
      - SENTRY_DSN_UI=0
      - SERVER_HOST=http://api.ly.fish.local
      - SERVER_PORT=80
      - NGINX_PORT=80
      - UI_PORT=80
      - NODE_ENV
    networks:
      - internal
  api:
    image: balena/jellyfish
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - LOGLEVEL=crit
      - NO_LOG_SUCCESS=1
      - NODE_ENV
      - SENTRY_DSN_SERVER
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_ID
      - INTEGRATION_BALENA_API_APP_SECRET
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
      - REGISTRY_TOKEN_AUTH_CERT_KEY="LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU4xWUw1WVRjb3NVVnhHdXlXMGt4cGE0ekxzbEpGQ2JvZUxIUWlpaW1vTkhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR0RRQ2FpK1FnNG9GZE9HMXZNdWdtMFA5bTViSUR3R29MNjg1aGVYR0hwZWJVblgxOGQvYwpQUTZGbDBQaklQam9iUzlCNW5oSTF1Y0p3MW8vclE2UXdnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
      - REGISTRY_TOKEN_AUTH_CERT_KID="UkNVNTo2Q1RaOkJITjc6RlBCUjpKWUJIOjVHRVI6QVdQSDpIRk9aOjZaT0c6VVUzTzo3Q0gzOjZFU0sK"
    restart: always
    networks:
      - internal
    expose:
      - 80
    ports:
      - 9230:9229
  worker_1:
    image: balena/jellyfish
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - LOGLEVEL=crit
      - NO_LOG_SUCCESS=1
      - NODE_ENV
      - SENTRY_DSN_SERVER
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_ID
      - INTEGRATION_BALENA_API_APP_SECRET
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
      - REGISTRY_TOKEN_AUTH_CERT_KEY="LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU4xWUw1WVRjb3NVVnhHdXlXMGt4cGE0ekxzbEpGQ2JvZUxIUWlpaW1vTkhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR0RRQ2FpK1FnNG9GZE9HMXZNdWdtMFA5bTViSUR3R29MNjg1aGVYR0hwZWJVblgxOGQvYwpQUTZGbDBQaklQam9iUzlCNW5oSTF1Y0p3MW8vclE2UXdnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
      - REGISTRY_TOKEN_AUTH_CERT_KID="UkNVNTo2Q1RaOkJITjc6RlBCUjpKWUJIOjVHRVI6QVdQSDpIRk9aOjZaT0c6VVUzTzo3Q0gzOjZFU0sK"
    restart: always
    networks:
      - internal
    expose:
      - 88
    ports:
      - 9231:9229
  balena-mdns-publisher:
    image: 'balena/balena-mdns-publisher:v1.14.8'
    network_mode: host
    cap_add:
      - SYS_RESOURCE
      - SYS_ADMIN
    security_opt:
      - 'apparmor=unconfined'
    tmpfs:
      - /run
      - /sys/fs/cgroup
    labels:
      io.balena.features.dbus: '1'
      io.balena.features.supervisor-api: '1'
    environment:
      MDNS_TLD: ly.fish.local
      MDNS_SUBDOMAINS: >-
        ["jel", "livechat", "api", "registry"]
      DBUS_SESSION_BUS_ADDRESS: 'unix:path=/host/run/dbus/system_bus_socket'
      CONFD_BACKEND: 'ENV'
  haproxy:
    build:
      context: ./haproxy
      dockerfile: Dockerfile
    healthcheck:
      test: /bin/sh -c 'ls -la /proc/*/exe | grep -q /usr/local/sbin/haproxy'
      interval: 60s
      timeout: 10s
      retries: 3
    ports:
      - "80:80"
      - "5432:5432"
      - "6379:6379"
    environment:
      LOGLEVEL: info
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    networks:
      internal:
        aliases:
          - jel.ly.fish.local
          - livechat.ly.fish.local
          - api.ly.fish.local
          - postgres.ly.fish.local
          - redis.ly.fish.local
    restart: unless-stopped

networks:
  internal: {}

