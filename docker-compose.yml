version: '2.1'

services:
  api:
    image: balena/jellyfish
    build:
      context: .
      dockerfile: apps/server/Dockerfile
      args:
        - NPM_TOKEN
    networks:
      - internal
    depends_on:
      - postgres
      - redis
      - tick
      - worker_1
      - worker_2
      - worker_3
      - balena-mdns-publisher
    environment:
      - DATABASE=postgres
      - LOGENTRIES_TOKEN
      - LOGLEVEL=crit
      - NODE_ENV=test
      - POD_NAME=localhost
      - PORT=8000
      - POSTGRES_DATABASE=jellyfish
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_USER=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      - SENTRY_DSN_SERVER
      - SERVER_DATABASE=jellyfish
      - SERVER_HOST=http://localhost
      - SERVER_PORT=8000
      - TEST_USER_ORGANIZATION=balena
      - TEST_USER_PASSWORD=jellyfish
      - TEST_USER_ROLE=user-test
      - TEST_USER_USERNAME=jellyfish
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_SECRET=foobar
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DEFAULT_USER
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS="{}"
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_DOMAIN
      - MAILGUN_BASE_URL
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - NPM_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
    healthcheck:
      interval: 30s
      retries: 5
      test:
        - CMD
        - curl
        - --fail
        - http://localhost:8000/health
      timeout: 10s
    expose:
      - 80
    restart: always
  livechat:
    build:
      args:
        - SERVER_HOST=http://api.ly.fish.local
        - SERVER_PORT=80
        - NPM_TOKEN
      context: .
      dockerfile: apps/livechat/Dockerfile
    depends_on:
      - api
      - balena-mdns-publisher
    networks:
      - internal
    environment:
      NGINX_PORT: 80
  postgres:
    image: balena/open-balena-db:4.1.0
    restart: always
    networks:
      - internal
  redis:
    image: balena/balena-redis:0.0.3
    command: [sh, -c, "redis-server /usr/local/etc/redis/redis.conf --save ''"]
    restart: always
    networks:
      - internal
  tick:
    image: balena/jellyfish-tick-server
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.tick
      args:
        - NPM_TOKEN
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - DATABASE=postgres
      - LOGENTRIES_TOKEN
      - NODE_ENV=test
      - POSTGRES_DATABASE=jellyfish
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_USER=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      - LOGLEVEL=crit
      - SENTRY_DSN_SERVER
      - CI
    restart: always
    networks:
      - internal
  ui:
    build:
      args:
        - SENTRY_DSN_UI='0'
        - SERVER_HOST=http://api.ly.fish.local
        - SERVER_PORT=80
        - NPM_TOKEN
      context: .
      dockerfile: apps/ui/Dockerfile
    depends_on:
      - api
      - balena-mdns-publisher
    environment:
      NGINX_PORT: 80
      NODE_ENV: test
    networks:
      - internal
  worker_1:
    image: balena/jellyfish-action-server
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.worker
      args:
        - NPM_TOKEN
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - DATABASE=postgres
      - LOGLEVEL=crit
      - NODE_ENV=test
      - POSTGRES_DATABASE=jellyfish
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_USER=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      - SENTRY_DSN_SERVER
      - LOGENTRIES_TOKEN
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_SECRET=foobar
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DEFAULT_USER
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS="{}"
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_DOMAIN
      - MAILGUN_BASE_URL
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - NPM_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
    restart: always
    networks:
      - internal
  worker_2:
    image: balena/jellyfish-action-server
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.worker
      args:
        - NPM_TOKEN
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - DATABASE=postgres
      - LOGLEVEL=crit
      - NODE_ENV=test
      - POSTGRES_DATABASE=jellyfish
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_USER=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      - SENTRY_DSN_SERVER
      - LOGENTRIES_TOKEN
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_SECRET=foobar
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DEFAULT_USER
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS="{}"
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_DOMAIN
      - MAILGUN_BASE_URL
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - NPM_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
    restart: always
    networks:
      - internal
  worker_3:
    image: balena/jellyfish-action-server
    build:
      context: .
      dockerfile: apps/action-server/Dockerfile.worker
      args:
        - NPM_TOKEN
    depends_on:
      - postgres
      - redis
      - balena-mdns-publisher
    environment:
      - DATABASE=postgres
      - LOGLEVEL=crit
      - NODE_ENV=test
      - POSTGRES_DATABASE=jellyfish
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_USER=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - REDIS_PORT=6379
      - SENTRY_DSN_SERVER
      - LOGENTRIES_TOKEN
      - FS_DRIVER
      - AWS_ACCESS_KEY_ID
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - INTEGRATION_BALENA_API_APP_SECRET=foobar
      - INTEGRATION_BALENA_API_OAUTH_BASE_URL=https://api.balena-cloud.com
      - INTEGRATION_BALENA_API_PRIVATE_KEY
      - INTEGRATION_BALENA_API_PUBLIC_KEY_PRODUCTION
      - INTEGRATION_BALENA_API_PUBLIC_KEY_STAGING=foobar
      - INTEGRATION_DEFAULT_USER
      - INTEGRATION_DISCOURSE_SIGNATURE_KEY
      - INTEGRATION_DISCOURSE_TOKEN
      - INTEGRATION_DISCOURSE_USERNAME
      - INTEGRATION_FLOWDOCK_SIGNATURE_KEY
      - INTEGRATION_FLOWDOCK_TOKEN
      - INTEGRATION_FRONT_TOKEN
      - INTEGRATION_GITHUB_APP_ID
      - INTEGRATION_GITHUB_PRIVATE_KEY
      - INTEGRATION_GITHUB_SIGNATURE_KEY
      - INTEGRATION_GITHUB_TOKEN
      - INTEGRATION_GOOGLE_MEET_CREDENTIALS="{}"
      - INTEGRATION_INTERCOM_TOKEN
      - INTEGRATION_OUTREACH_APP_ID
      - INTEGRATION_OUTREACH_APP_SECRET
      - INTEGRATION_OUTREACH_SIGNATURE_KEY
      - INTEGRATION_TYPEFORM_SIGNATURE_KEY
      - MAILGUN_DOMAIN
      - MAILGUN_BASE_URL
      - MAILGUN_TOKEN
      - MONITOR_SECRET_TOKEN
      - NPM_TOKEN
      - RESET_PASSWORD_SECRET_TOKEN
      - CI
    restart: always
    networks:
      - internal
  balena-mdns-publisher:
    image: 'balena/balena-mdns-publisher:master'
    network_mode: host
    cap_add:
      - SYS_RESOURCE
      - SYS_ADMIN
    security_opt:
      - 'apparmor:unconfined'
    tmpfs:
      - /run
      - /sys/fs/cgroup
    labels:
      io.balena.features.dbus: '1'
      io.balena.features.supervisor-api: '1'
    environment:
      MDNS_TLD: ly.fish.local
      MDNS_SUBDOMAINS: >-
        ["jel", "livechat", "api"]
      DBUS_SESSION_BUS_ADDRESS: 'unix:path=/host/run/dbus/system_bus_socket'
      CONFD_BACKEND: 'ENV'
  haproxy:
    image: 'balena/open-balena-haproxy:2.11.3'
    cap_add:
      - SYS_RESOURCE
      - SYS_ADMIN
    security_opt:
      - 'apparmor:unconfined'
    tmpfs:
      - /run
      - /sys/fs/cgroup
    depends_on:
      - worker_1
      - worker_2
      - worker_3
      - ui
      - tick
      - livechat
      - api
      - balena-mdns-publisher
    ports:
      - '80:80'
      - '5432:5432'
      - '6379:6379'
    networks:
      internal:
        aliases:
          - jel.ly.fish.local
          - livechat.ly.fish.local
          - api.ly.fish.local
    environment:
      DOMAIN_INC_UUID: 'false'
      AUTOGENERATE_CERTS: 'false'
      AUTH_TOKEN: <token>
      STATIC_DNS_IP: <ip>
      CONFD_BACKEND: 'ENV'
      PROXY_CONFIG: ewoJImRlZmF1bHRzIjogWwoJCSJ0aW1lb3V0IGNvbm5lY3QgNTAwMCIsCgkJInRpbWVvdXQgY2xpZW50IDYwMDAwIiwKCQkidGltZW91dCBzZXJ2ZXIgNjAwMDAiLAoJCSJkZWZhdWx0LXNlcnZlciBpbml0LWFkZHIgbGFzdCxsaWJjLG5vbmUiCgldLAoJInJlc29sdmVycyI6IFsKCQl7CgkJCSJpZCI6ICJkb2NrZXItYnJpZGdlLXJlc29sdmVyIiwKCQkJIm5hbWVzZXJ2ZXJzIjogewoJCQkJImRvY2tlci1yZXNvbHZlciI6ICIxMjcuMC4wLjExOjUzIgoJCQl9LAoJCQkiaG9sZCI6IHsKCQkJCSJ2YWxpZCI6ICIwbXMiCgkJCX0KCQl9CgldLAoJInVpIjogewoJCSJiYWNrZW5kIjogWwoJCQl7CgkJCQkidXJsIjogImh0dHA6Ly91aTo4MCIsCgkJCQkic2VydmVyIjogewoJCQkJCSJyZXNvbHZlcnMiOiAiZG9ja2VyLWJyaWRnZS1yZXNvbHZlciIsCgkJCQkJInJlc29sdmUtcHJlZmVyIjogImlwdjQiLAoJCQkJCSJjaGVjayI6IG51bGwsCgkJCQkJInBvcnQiOiAiPHBvcnQ+IgoJCQkJfQoJCQl9CgkJXSwKCQkiZnJvbnRlbmQiOiBbCgkJCXsKCQkJCSJwcm90b2NvbCI6ICJodHRwIiwKCQkJCSJkb21haW4iOiAibHkuZmlzaC5sb2NhbCIsCgkJCQkic3ViZG9tYWluIjogImplbCIsCgkJCQkicG9ydCI6ICI4MCIKCQkJfQoJCV0KCX0sCgkicmVkaXMiOiB7CgkJImJhY2tlbmQiOiBbCgkJCXsKCQkJCSJ1cmwiOiAiaHR0cDovL3JlZGlzOjYzNzkiLAoJCQkJInNlcnZlciI6IHsKCQkJCQkicmVzb2x2ZXJzIjogImRvY2tlci1icmlkZ2UtcmVzb2x2ZXIiLAoJCQkJCSJyZXNvbHZlLXByZWZlciI6ICJpcHY0IiwKCQkJCQkiY2hlY2siOiBudWxsLAoJCQkJCSJwb3J0IjogIjxwb3J0PiIKCQkJCX0KCQkJfQoJCV0sCgkJImZyb250ZW5kIjogWwoJCQl7CgkJCQkicHJvdG9jb2wiOiAiaHR0cCIsCgkJCQkiZG9tYWluIjogImx5LmZpc2gubG9jYWwiLAoJCQkJInN1YmRvbWFpbiI6ICJyZWRpcyIsCgkJCQkicG9ydCI6ICI2Mzc5IgoJCQl9CgkJXQoJfSwKCSJwb3N0Z3JlcyI6IHsKCQkiYmFja2VuZCI6IFsKCQkJewoJCQkJInVybCI6ICJodHRwOi8vcG9zdGdyZXM6NTQzMiIsCgkJCQkic2VydmVyIjogewoJCQkJCSJyZXNvbHZlcnMiOiAiZG9ja2VyLWJyaWRnZS1yZXNvbHZlciIsCgkJCQkJInJlc29sdmUtcHJlZmVyIjogImlwdjQiLAoJCQkJCSJjaGVjayI6IG51bGwsCgkJCQkJInBvcnQiOiAiPHBvcnQ+IgoJCQkJfQoJCQl9CgkJXSwKCQkiZnJvbnRlbmQiOiBbCgkJCXsKCQkJCSJwcm90b2NvbCI6ICJodHRwIiwKCQkJCSJkb21haW4iOiAibHkuZmlzaC5sb2NhbCIsCgkJCQkic3ViZG9tYWluIjogInBvc3RncmVzIiwKCQkJCSJwb3J0IjogIjU0MzIiCgkJCX0KCQldCgl9LAoJImxpdmVjaGF0IjogewoJCSJiYWNrZW5kIjogWwoJCQl7CgkJCQkidXJsIjogImh0dHA6Ly9saXZlY2hhdDo4MCIsCgkJCQkic2VydmVyIjogewoJCQkJCSJyZXNvbHZlcnMiOiAiZG9ja2VyLWJyaWRnZS1yZXNvbHZlciIsCgkJCQkJInJlc29sdmUtcHJlZmVyIjogImlwdjQiLAoJCQkJCSJjaGVjayI6IG51bGwsCgkJCQkJInBvcnQiOiAiPHBvcnQ+IgoJCQkJfQoJCQl9CgkJXSwKCQkiZnJvbnRlbmQiOiBbCgkJCXsKCQkJCSJwcm90b2NvbCI6ICJodHRwIiwKCQkJCSJkb21haW4iOiAibHkuZmlzaC5sb2NhbCIsCgkJCQkic3ViZG9tYWluIjogImxpdmVjaGF0IiwKCQkJCSJwb3J0IjogIjgwIgoJCQl9CgkJXQoJfSwKCSJhcGkiOiB7CgkJImJhY2tlbmQiOiBbCgkJCXsKCQkJCSJ1cmwiOiAiaHR0cDovL2FwaTo4MDAwIiwKCQkJCSJzZXJ2ZXIiOiB7CgkJCQkJInJlc29sdmVycyI6ICJkb2NrZXItYnJpZGdlLXJlc29sdmVyIiwKCQkJCQkicmVzb2x2ZS1wcmVmZXIiOiAiaXB2NCIsCgkJCQkJImNoZWNrIjogbnVsbCwKCQkJCQkicG9ydCI6ICI8cG9ydD4iCgkJCQl9CgkJCX0KCQldLAoJCSJmcm9udGVuZCI6IFsKCQkJewoJCQkJInByb3RvY29sIjogImh0dHAiLAoJCQkJImRvbWFpbiI6ICJseS5maXNoLmxvY2FsIiwKCQkJCSJzdWJkb21haW4iOiAiYXBpIiwKCQkJCSJwb3J0IjogIjgwIgoJCQl9CgkJXQoJfQp9Cgo=

networks:
  internal: {}

